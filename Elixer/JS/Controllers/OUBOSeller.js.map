{"version":3,"sources":["app.js","AuthController.js","UserController.js","SellerRefundFormController.js","Global.js"],"names":[],"mappingsfile":"OUBOSeller.js","sourcesContent":["\r\n(function() {\r\n\r\n    'use strict';\r\n\r\n    angular\r\n        .module('RefundSystemApp', ['ui.router', 'satellizer'])\r\n        .config(function($stateProvider, $urlRouterProvider, $authProvider, $httpProvider, $provide,$locationProvider) {\r\n\r\n            function redirectWhenLoggedOut($q, $injector) {\r\n\r\n                return {\r\n                    responseError: function(rejection) {\r\n                        var $state = $injector.get('$state');\r\n                        var rejectionReasons = ['token_not_provided', 'token_expired', 'token_absent', 'token_invalid'];\r\n                        angular.forEach(rejectionReasons, function(value, key) {\r\n                            if(rejection.data.error === value) {\r\n                                localStorage.removeItem('user');\r\n                                $state.go('auth');\r\n                            }\r\n                        });\r\n                        return $q.reject(rejection);\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            $provide.factory('redirectWhenLoggedOut', redirectWhenLoggedOut);\r\n            $httpProvider.interceptors.push('redirectWhenLoggedOut');\r\n            $authProvider.loginUrl = configuration.path+'/api/authenticate';\r\n            $urlRouterProvider.otherwise('/auth');\r\n            $stateProvider\r\n                .state('auth', {\r\n                    url:'/auth',\r\n                    templateUrl: '../resources/views/AuthView.blade.php',\r\n                    controller: 'AuthController as auth'\r\n                })\r\n                .state('users', {\r\n                    url: '/users',\r\n                    templateUrl: '../resources/views/UserView.blade.php',\r\n                    controller: 'UserController as user'\r\n                })\r\n                .state('sellerrefundform', {\r\n                    url: '/sellerrefundform',\r\n                    templateUrl: '../resources/views/SellerRefundForm.blade.php',\r\n                    controller: 'SellerRefundFormCtrl as sellerrefundform'\r\n                });\r\n        })\r\n        .run(function($rootScope, $state) {\r\n            $rootScope.$on('$stateChangeStart', function(event, toState) {\r\n                 user = JSON.parse(localStorage.getItem('user'));\r\n                if(user) {\r\n                    $rootScope.authenticated = true;\r\n                    $rootScope.currentUser = user;\r\n                    if(toState.name === \"auth\") {\r\n                        event.preventDefault();\r\n                        $state.go('users');\r\n                    }\r\n                }\r\n            });\r\n        });\r\n})();","(function() {\r\n\r\n    'use strict';\r\n\r\n    angular\r\n        .module('RefundSystemApp')\r\n        .controller('AuthController', AuthController);\r\n\r\n\r\n    function AuthController($auth, $state, $http, $rootScope) {\r\n\r\n        var vm = this;\r\n\r\n        vm.loginError = false;\r\n        vm.loginErrorText;\r\n\r\n        vm.login = function() {\r\n\r\n            var credentials = {\r\n                email: vm.email,\r\n                password: vm.password\r\n            }\r\n\r\n            $auth.login(credentials).then(function() {\r\n\r\n                // Return an $http request for the now authenticated\r\n                // user so that we can flatten the promise chain\r\n                return $http.get(configuration.path+'/api/authenticate/user?token='+$auth.getToken()).then(function(response) {\r\n\r\n                    // Stringify the returned data to prepare it\r\n                    // to go into local storage\r\n                    var user = JSON.stringify(response.data.user);\r\n\r\n                    // Set the stringified user data into local storage\r\n                    localStorage.setItem('user', user);\r\n\r\n                    // The user's authenticated state gets flipped to\r\n                    // true so we can now show parts of the UI that rely\r\n                    // on the user being logged in\r\n                    $rootScope.authenticated = true;\r\n\r\n                    // Putting the user's data on $rootScope allows\r\n                    // us to access it anywhere across the app\r\n                    $rootScope.currentUser = response.data.user;\r\n\r\n                    // Everything worked out so we can now redirect to\r\n                    // the users state to view the data\r\n\r\n                    $state.go('users');\r\n\r\n                });\r\n\r\n                // Handle errors\r\n            }, function(error) {\r\n                vm.loginError = true;\r\n                vm.loginErrorText = error.data.error;\r\n            });\r\n        }\r\n    }\r\n\r\n})();","(function() {\r\n\r\n    'use strict';\r\n\r\n    angular\r\n        .module('RefundSystemApp')\r\n        .controller('UserController', UserController);\r\n\r\n    function UserController($http, $auth, $rootScope, $state) {\r\n        if(user) {\r\n            var vm = this;\r\n            vm.CasesGrid = [];\r\n            vm.reasons = [];\r\n            vm.wishes = [];\r\n            vm.conditions = [];\r\n\r\n            vm.refresh = function() {\r\n                vm.CasesGrid = [];\r\n                $http.get(configuration.path + '/Seller/AllCases/' + user.id + '?token=' + $auth.getToken()).success(function (data) {\r\n                    $.each(data, function (index) {\r\n                        var detail = JSON.parse(data[index].RefundCaseDetail);\r\n                        var id = JSON.parse(data[index].RefundCase_Id);\r\n                        detail.Id = id;\r\n                        detail.IsLabelGenerated=data[index].RefundCaseStatusKey==\"\"?false:true;\r\n                        vm.CasesGrid.push(detail);\r\n                    });\r\n\r\n                });\r\n            }\r\n            vm.refresh();\r\n            $http.get(configuration.path+'/wish').success(function(data){\r\n                $.each(data, function(index) {\r\n                    vm.wishes.push(data[index].Wish);\r\n                });\r\n            });\r\n            $http.get(configuration.path+'/reason').success(function(data){\r\n                $.each(data, function(index) {\r\n                    vm.reasons.push(data[index].Reason);\r\n                });\r\n            });\r\n            $http.get(configuration.path+'/itemCondition').success(function(data){\r\n                $.each(data, function(index) {\r\n                    vm.conditions.push(data[index].ItemCondition);\r\n                });\r\n            });\r\n            vm.ToSellerForm = function () {\r\n                if ($rootScope.authenticated)\r\n                    $state.go('sellerrefundform');\r\n                else\r\n                    vm.logout();\r\n            }\r\n            vm.EditCase=function (Data) {\r\n                vm.EditFormData='';\r\n                vm.EditFormData=Data;\r\n\r\n                var editBox=$('#editDiv');\r\n                editBox.dialog({width:700,close:vm.refresh});\r\n                editBox.dialog('open');\r\n            }\r\n            vm.SubmitEditedForm=function () {\r\n                var id=vm.EditFormData.Id;\r\n                /*Delete unwanted properties*/\r\n                delete vm.EditFormData.Id;\r\n                delete vm.EditFormData.IsLabelGenerated;\r\n\r\n                var editBox=$('#editDiv');\r\n                editBox.dialog('destroy');\r\n                $http.post(configuration.path+'/Seller/UpdateCaseData/'+id+ '?token=' + $auth.getToken(), JSON.stringify(vm.EditFormData)).success(function(data){\r\n                    vm.refresh();\r\n                });\r\n            }\r\n            vm.GetLink=function (id) {\r\n                $http.get(configuration.path + '/Seller/GetLink/' +id + '?token=' + $auth.getToken()).success(function (data) {\r\n                    $('<div />').html(data).dialog({\r\n                        title: 'Copy & Send To Customer', width: $(window).width() - 20,\r\n                        height: 200\r\n                    });\r\n                });\r\n            }\r\n            vm.DeleteCase=function (id) {\r\n                $http.get(configuration.path + '/Seller/DeleteCase/' +id + '?token=' + $auth.getToken()).success(function (data) {\r\n                    vm.refresh();\r\n                });\r\n            }\r\n            vm.logout = function () {\r\n                Logout($auth, $rootScope, $state);\r\n            }\r\n        }\r\n        else\r\n            Logout($auth, $rootScope, $state);\r\n    }\r\n})();","(function() {\r\n\r\n    'use strict';\r\n\r\n    angular\r\n        .module('RefundSystemApp')\r\n        .controller('SellerRefundFormCtrl',function ($scope, $http,$auth,$rootScope,$state) {\r\n            if(user) {\r\n            $scope.reasons = [];\r\n            $scope.wishes = [];\r\n            $scope.conditions = [];\r\n\r\n            $http.get(configuration.path + '/wish').success(function (data) {\r\n                $.each(data, function (index) {\r\n                    $scope.wishes.push(data[index].Wish);\r\n                });\r\n\r\n\r\n            });\r\n            $http.get(configuration.path + '/reason').success(function (data) {\r\n                $.each(data, function (index) {\r\n                    $scope.reasons.push(data[index].Reason);\r\n                });\r\n\r\n\r\n            });\r\n            $http.get(configuration.path + '/itemCondition').success(function (data) {\r\n                $.each(data, function (index) {\r\n                    $scope.conditions.push(data[index].ItemCondition);\r\n                });\r\n\r\n\r\n            });\r\n            $scope.form = {\r\n                sellerNumber: user.id,\r\n                emailAddress: \"\",\r\n                orderNumber: \"\",\r\n                date: \"\",\r\n                price: \"\",\r\n                itemSKU: \"\",\r\n                reason: \"\",\r\n                condition: \"\",\r\n                wish: \"\"\r\n            };\r\n            $scope.logout = function () {\r\n                Logout($auth, $rootScope, $state);\r\n            }\r\n            $scope.SubmitForm = function () {\r\n                if ($scope.form.sellerNumber != \"\") {\r\n                    $http.post(configuration.path + '/GenerateRefundLink?token=' + $auth.getToken(), JSON.stringify($scope.form)).success(function (data) {\r\n\r\n                        $('<div />').html(data).dialog({\r\n                            title: 'Copy & Send To Customer', width: $(window).width() - 20,\r\n                            height: 200\r\n                        });\r\n                    });\r\n                }\r\n            };\r\n        }else{\r\n                Logout($auth, $rootScope, $state);\r\n            }\r\n});\r\n})();\r\n","/*Global Variable*/\r\nvar user;\r\n\r\n/*Global Function*/\r\nfunction Logout($auth,$rootScope,$state) {\r\n    $auth.logout().then(function() {\r\n\r\n        localStorage.removeItem('user');\r\n        $rootScope.authenticated = false;\r\n        $rootScope.currentUser = null;\r\n        $state.go('auth');\r\n    });\r\n\r\n}"],"sourceRoot":"/source/"}