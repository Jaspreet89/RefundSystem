{"version":3,"sources":["UploaderController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Uploader.js","sourcesContent":["'use strict';\r\n\r\n\r\nangular\r\n\r\n\r\n    .module('app', ['angularFileUpload'])\r\n\r\n\r\n    .controller('AppController', ['$scope', 'FileUploader', function($scope, FileUploader) {\r\n        var uploader = $scope.uploader = new FileUploader({\r\n            url: 'upload.php'\r\n        });\r\n\r\n        // FILTERS\r\n\r\n        uploader.filters.push({\r\n            name: 'imageFilter',\r\n            fn: function(item /*{File|FileLikeObject}*/, options) {\r\n                var type = '|' + item.type.slice(item.type.lastIndexOf('/') + 1) + '|';\r\n                return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n            }\r\n        });\r\n\r\n        // CALLBACKS\r\n\r\n        uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {\r\n            console.info('onWhenAddingFileFailed', item, filter, options);\r\n        };\r\n        uploader.onAfterAddingFile = function(fileItem) {\r\n            console.info('onAfterAddingFile', fileItem);\r\n        };\r\n        uploader.onAfterAddingAll = function(addedFileItems) {\r\n            console.info('onAfterAddingAll', addedFileItems);\r\n        };\r\n        uploader.onBeforeUploadItem = function(item) {\r\n            console.info('onBeforeUploadItem', item);\r\n        };\r\n        uploader.onProgressItem = function(fileItem, progress) {\r\n            console.info('onProgressItem', fileItem, progress);\r\n        };\r\n        uploader.onProgressAll = function(progress) {\r\n            console.info('onProgressAll', progress);\r\n        };\r\n        uploader.onSuccessItem = function(fileItem, response, status, headers) {\r\n            console.info('onSuccessItem', fileItem, response, status, headers);\r\n        };\r\n        uploader.onErrorItem = function(fileItem, response, status, headers) {\r\n            console.info('onErrorItem', fileItem, response, status, headers);\r\n        };\r\n        uploader.onCancelItem = function(fileItem, response, status, headers) {\r\n            console.info('onCancelItem', fileItem, response, status, headers);\r\n        };\r\n        uploader.onCompleteItem = function(fileItem, response, status, headers) {\r\n            console.info('onCompleteItem', fileItem, response, status, headers);\r\n        };\r\n        uploader.onCompleteAll = function() {\r\n            console.info('onCompleteAll');\r\n        };\r\n\r\n        console.info('uploader', uploader);\r\n    }]);"],"sourceRoot":"/source/"}