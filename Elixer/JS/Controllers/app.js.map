{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function () {\r\n\r\n    'use strict';\r\n\r\n    angular\r\n        .module('RefundSystemApp', ['ui.router', 'satellizer', 'angularFileUpload'])\r\n        .config(['$stateProvider', '$urlRouterProvider', '$authProvider', '$httpProvider', '$provide', '$locationProvider', function ($stateProvider, $urlRouterProvider, $authProvider, $httpProvider, $provide, $locationProvider) {\r\n\r\n            function redirectWhenLoggedOut($q, $injector) {\r\n\r\n                return {\r\n                    responseError: function (rejection) {\r\n                        var $state = $injector.get('$state');\r\n                        var rejectionReasons = ['token_not_provided', 'token_expired', 'token_absent', 'token_invalid'];\r\n                        angular.forEach(rejectionReasons, function (value, key) {\r\n                            if (rejection.data.error === value) {\r\n                                localStorage.removeItem('user');\r\n                                $state.go('auth');\r\n                            }\r\n                        });\r\n                        return $q.reject(rejection);\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            $provide.factory('redirectWhenLoggedOut', ['$q', '$injector', redirectWhenLoggedOut]);\r\n            $httpProvider.interceptors.push('redirectWhenLoggedOut');\r\n            $authProvider.loginUrl = configuration.path + '/api/authenticate';\r\n            $urlRouterProvider.otherwise('/auth');\r\n            $stateProvider\r\n                .state('auth', {\r\n                    url: '/auth',\r\n                    templateUrl: '../resources/views/AuthView.blade.php',\r\n                    controller: 'AuthController as auth'\r\n                })\r\n                .state('users', {\r\n                    url: '/users',\r\n                    templateUrl: '../resources/views/UserView.blade.php',\r\n                    controller: 'UserController as user'\r\n                })\r\n                .state('sellerrefundform', {\r\n                    url: '/sellerrefundform',\r\n                    templateUrl: '../resources/views/SellerRefundForm.blade.php',\r\n                    controller: 'SellerRefundFormCtrl as sellerrefundform'\r\n                })\r\n                .state('manageuser', {\r\n                    url: '/manageuser',\r\n                    templateUrl: '../resources/views/ManageUser.blade.php',\r\n                    controller: 'ManageUserCtrl as manageuser'\r\n                })\r\n                .state('warehouse', {\r\n                    url: '/warehouse',\r\n                    templateUrl: '../resources/views/Warehouse.blade.php',\r\n                    controller: 'WarehouseCtrl as warehouse'\r\n                })\r\n                .state('notification', {\r\n                    url: '/notification',\r\n                    templateUrl: '../resources/views/Notification.blade.php',\r\n                    controller: 'NotificationCtrl as notification'\r\n                })\r\n                .state('upload', {\r\n                    url: '/upload',\r\n                    templateUrl: '../resources/views/Uploader.blade.php',\r\n                    params: {\r\n                        'casedId': -1\r\n                    }\r\n                })\r\n                .state('warehouseitem', {\r\n                    url: '/warehouseitem',\r\n                    templateUrl: '../resources/views/WarehouseItem.blade.php',\r\n                    controller: 'WarehouseItemCtrl as warehouseitem',\r\n                    params: {\r\n                        'casedata': ''\r\n                    }\r\n                })\r\n            ;\r\n        }])\r\n        .run(['$rootScope', '$state','$window', function ($rootScope, $state,$window) {\r\n            $rootScope.getGlobals = function(variableName){\r\n                return $window[variableName];\r\n            };\r\n            $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState) {\r\n                $('.ui-dialog').remove();\r\n                user = JSON.parse(localStorage.getItem('user'));\r\n                if (user) {\r\n                    $rootScope.authenticated = true;\r\n                    $rootScope.currentUser = user;\r\n                    if (toState.name === \"auth\") {\r\n                        event.preventDefault();\r\n                        if (fromState.name === \"\") {\r\n                            $state.go('users');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }]);\r\n})();"],"sourceRoot":"/source/"}